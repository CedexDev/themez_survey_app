/* standard mixins
-------------------------------------------------------------- */

// the mixins here should be reusable in any project

@mixin placeholderStyling {
	::-webkit-input-placeholder { @content; }
	::-moz-placeholder { @content; }
	:-ms-input-placeholder { @content; }
}

@mixin border-radius($radius) {
	border-radius: $radius;
	-webkit-background-clip: padding-box;
	-moz-background-clip: padding-box;
	background-clip: padding-box;
}

@mixin transition($value) {
	-webkit-transition: $value;
	-moz-transition: $value;
	transition: $value;
}

@mixin transform($value) {
	-webkit-transform: $value;
	-moz-transform: $value;
	-ms-transform: $value;
	transform: $value;
}

@mixin box-sizing($boxModel) {
	-webkit-box-sizing: $boxModel;
	-moz-box-sizing: $boxModel;
	box-sizing: $boxModel;
}

@mixin background-size($backSize) {
	-webkit-background-size: $backSize;
	-moz-background-size: $backSize;
	-o-background-size: $backSize;
	background-size: $backSize;
}

@mixin user-select($value) {
	-webkit-user-select: $value;
	-moz-user-select: $value;
	-khtml-user-select: $value;
	-ms-user-select: $value;
}

@mixin box-shadow($boxShadow) {
	-webkit-box-shadow: $boxShadow;
	-moz-box-shadow: $boxShadow;
	box-shadow: $boxShadow;
}

@mixin clearfix {
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin flexwrap() {
	-webkit-box-lines: multiple;
	-moz-box-lines: multiple;
	-ms-flex-wrap: wrap;
	-webkit-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin flex() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;

	-webkit-box-direction: normal;
	-moz-box-direction: normal;
	-ms-flex-direction: row;
	-webkit-flex-direction: row;
	flex-direction: row;

	-webkit-box-pack: justify;
	-moz-box-pack: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-between;
	justify-content: space-between;
}

@mixin gradient($value1,$value2) {
	background: -moz-linear-gradient(left, $value1, $value2);
	background: -webkit-gradient(left top, right top, color-stop($value1), color-stop($value2));
	background: -webkit-linear-gradient(left, $value1, $value2);
	background: -o-linear-gradient(left, $value1, $value2);
	background: -ms-linear-gradient(left, $value1, $value2);
	background: linear-gradient(to right, $value1, $value2);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$value1', endColorstr='$value2', GradientType=1 );
}

@mixin gradient-vert($value1,$value2) {
	background: -moz-linear-gradient(top, $value1, $value2);
	background: -webkit-gradient(top left, bottom left, color-stop($value1), color-stop($value2));
	background: -webkit-linear-gradient(top, $value1, $value2);
	background: -o-linear-gradient(top, $value1, $value2);
	background: -ms-linear-gradient(top, $value1, $value2);
	background: linear-gradient(to bottom, $value1, $value2);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$value1', endColorstr='$value2', GradientType=1 );
}

/* responsive mixins
-------------------------------------------------------------- */

// not all @media queries are listed here
// there are more  @media queries located within other .scss files too

@mixin respond-to($media) {
	@if $media == mobileOnly {
		@media screen and (max-width: 720px) { @content }
	}
	@else if $media == tablet {
		@media screen and (min-width: 721px) { @content }
	}
	@else if $media == tabletOnly {
		@media screen and (min-width: 721px) and (max-width: 1099px) { @content }
	}
	@else if $media == tabletDown {
		@media screen and (max-width: 1099px) { @content }
	}
	@else if $media == desktop {
		@media screen and (min-width: 1100px) { @content }
	}
	@else if $media == desktopLarge {
		@media screen and (min-width: 1300px) { @content }
	}
	@else if $media == desktopWide {
		@media screen and (min-width: 1500px) { @content }
	}
}




@mixin heading($value, $value2) {
	.heading {
		font-weight: 200;
		font-size: 30px;
		color: $value;
		line-height: 1.3;
		margin-bottom: 20px;
		padding: 0;
	}
	.heading-text {
		font-size: 14px;
		margin-bottom: 40px;
	}
	.more {
		color: $value2;
		font-weight: 600;
		font-size: 12px;
		position: absolute;
		right: 0;
		top: 17px;
		@include transition(all 0.2s ease-in-out);
		svg {
			position: relative;
			top: -2px;
			width: 10px;
			height: 5px;
			@include transform(rotate(-90deg));
		}
		.fill {
			fill: $value2;
			@include transition(all 0.2s ease-in-out);
		}
	}

	@include respond-to(tablet) {
	}
	@include respond-to(desktop) {
		font-size: 30px;
		.heading {
			font-size: 60px;
		}
		.heading-text {
			font-size: 18px;
		}
		.more {
			font-size: 16px;
			top: 41px;
			svg {
				top: -2px;
				width: 12px;
				height: 7px;
			}
		}
	}
}


